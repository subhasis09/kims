"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-qr-code";
exports.ids = ["vendor-chunks/react-qr-code"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-qr-code/lib/QRCodeSvg/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-qr-code/lib/QRCodeSvg/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _propTypes = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _react2 = _interopRequireDefault(_react);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nvar propTypes = {\n  bgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]).isRequired,\n  bgD: _propTypes2.default.string.isRequired,\n  fgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]).isRequired,\n  fgD: _propTypes2.default.string.isRequired,\n  size: _propTypes2.default.number.isRequired,\n  title: _propTypes2.default.string,\n  viewBoxSize: _propTypes2.default.number.isRequired,\n  xmlns: _propTypes2.default.string\n};\nvar QRCodeSvg = (0, _react.forwardRef)(function (_ref, ref) {\n  var bgColor = _ref.bgColor,\n    bgD = _ref.bgD,\n    fgD = _ref.fgD,\n    fgColor = _ref.fgColor,\n    size = _ref.size,\n    title = _ref.title,\n    viewBoxSize = _ref.viewBoxSize,\n    _ref$xmlns = _ref.xmlns,\n    xmlns = _ref$xmlns === undefined ? \"http://www.w3.org/2000/svg\" : _ref$xmlns,\n    props = _objectWithoutProperties(_ref, [\"bgColor\", \"bgD\", \"fgD\", \"fgColor\", \"size\", \"title\", \"viewBoxSize\", \"xmlns\"]);\n  return _react2.default.createElement(\"svg\", _extends({}, props, {\n    height: size,\n    ref: ref,\n    viewBox: \"0 0 \" + viewBoxSize + \" \" + viewBoxSize,\n    width: size,\n    xmlns: xmlns\n  }), title ? _react2.default.createElement(\"title\", null, title) : null, _react2.default.createElement(\"path\", {\n    d: bgD,\n    fill: bgColor\n  }), _react2.default.createElement(\"path\", {\n    d: fgD,\n    fill: fgColor\n  }));\n});\nQRCodeSvg.displayName = \"QRCodeSvg\";\nQRCodeSvg.propTypes = propTypes;\nexports[\"default\"] = QRCodeSvg;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-qr-code/lib/QRCodeSvg/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-qr-code/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/react-qr-code/lib/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.QRCode = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _propTypes = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _ErrorCorrectLevel = __webpack_require__(/*! qr.js/lib/ErrorCorrectLevel */ \"(ssr)/./node_modules/qr.js/lib/ErrorCorrectLevel.js\");\nvar _ErrorCorrectLevel2 = _interopRequireDefault(_ErrorCorrectLevel);\nvar _QRCode = __webpack_require__(/*! qr.js/lib/QRCode */ \"(ssr)/./node_modules/qr.js/lib/QRCode.js\");\nvar _QRCode2 = _interopRequireDefault(_QRCode);\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _react2 = _interopRequireDefault(_react);\nvar _QRCodeSvg = __webpack_require__(/*! ./QRCodeSvg */ \"(ssr)/./node_modules/react-qr-code/lib/QRCodeSvg/index.js\");\nvar _QRCodeSvg2 = _interopRequireDefault(_QRCodeSvg);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\n// A `qr.js` doesn't handle error level of zero (M) so we need to do it right, thus the deep require.\n\nvar propTypes = {\n  bgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),\n  fgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),\n  level: _propTypes2.default.string,\n  size: _propTypes2.default.number,\n  value: _propTypes2.default.string.isRequired\n};\nvar QRCode = (0, _react.forwardRef)(function (_ref, ref) {\n  var _ref$bgColor = _ref.bgColor,\n    bgColor = _ref$bgColor === undefined ? \"#FFFFFF\" : _ref$bgColor,\n    _ref$fgColor = _ref.fgColor,\n    fgColor = _ref$fgColor === undefined ? \"#000000\" : _ref$fgColor,\n    _ref$level = _ref.level,\n    level = _ref$level === undefined ? \"L\" : _ref$level,\n    _ref$size = _ref.size,\n    size = _ref$size === undefined ? 256 : _ref$size,\n    value = _ref.value,\n    props = _objectWithoutProperties(_ref, [\"bgColor\", \"fgColor\", \"level\", \"size\", \"value\"]);\n\n  // Use type === -1 to automatically pick the best type.\n  var qrcode = new _QRCode2.default(-1, _ErrorCorrectLevel2.default[level]);\n  qrcode.addData(value);\n  qrcode.make();\n  var cells = qrcode.modules;\n  return _react2.default.createElement(_QRCodeSvg2.default, _extends({}, props, {\n    bgColor: bgColor,\n    bgD: cells.map(function (row, rowIndex) {\n      return row.map(function (cell, cellIndex) {\n        return !cell ? \"M \" + cellIndex + \" \" + rowIndex + \" l 1 0 0 1 -1 0 Z\" : \"\";\n      }).join(\" \");\n    }).join(\" \"),\n    fgColor: fgColor,\n    fgD: cells.map(function (row, rowIndex) {\n      return row.map(function (cell, cellIndex) {\n        return cell ? \"M \" + cellIndex + \" \" + rowIndex + \" l 1 0 0 1 -1 0 Z\" : \"\";\n      }).join(\" \");\n    }).join(\" \"),\n    ref: ref,\n    size: size,\n    viewBoxSize: cells.length\n  }));\n});\nexports.QRCode = QRCode;\nQRCode.displayName = \"QRCode\";\nQRCode.propTypes = propTypes;\nexports[\"default\"] = QRCode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-qr-code/lib/index.js\n");

/***/ })

};
;